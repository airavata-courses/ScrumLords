version: 2.1

defaults: &defaults
  docker:
    - image: google/cloud-sdk

parameters:
  # This parameter is used to trigger the main workflow
  trigger:
    type: boolean
    default: true

  # A parameter per package
  manager:
    type: boolean
    default: false
  session_manager:
    type: boolean
    default: false
  weather_data_retrieval:
    type: boolean
    default: false
  model_execution:
    type: boolean
    default: false
  postprocessor:
    type: boolean
    default: false
  user_server:
    type: boolean
    default: false
  user_interface:
    type: boolean
    default: false

executors:
  node:
    docker:
      - image: circleci/node

jobs:
  trigger-workflows:
    executor: node
    steps:
      - checkout
      - run:
          name: Trigger workflows
          command: chmod +x .circleci/circle_trigger.sh && .circleci/circle_trigger.sh

  build:
    <<: *defaults

    parameters:
      package_name:
        type: string

#    executor: node
#    working_directory: ~/project/packages/<< parameters.package_name >>

    steps:
      - checkout:
          path: ~/project
      - setup_remote_docker
        - run:
        name: Generate full image name for new docker image
        command: |
          set -x
          if [ "${CIRCLE_BRANCH}" == "master" ]
          then
            DOCKER_IMAGE_TAG=v${CIRCLE_BUILD_NUM}
            echo "$DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG" > full_docker_image_name
          else
            DOCKER_IMAGE_TAG=${CIRCLE_BRANCH}
            echo "hello-app:$DOCKER_IMAGE_TAG" > full_docker_image_name
          fi
      # This step is added only to show that we are in the package directory
      - run:
          name: Content
          command: |
            cat README.md
            echo "<< parameters.package_name >> built." > build.txt
      - run:
          name: Build
          command: echo "Build << parameters.package_name >> ..."
      - persist_to_workspace:
          root: ~/project
          paths:
            - packages/<< parameters.package_name >>
  deploy:
    parameters:
      package_name:
        type: string

    executor: node
    working_directory: ~/project/packages/<< parameters.package_name >>

    steps:
      - attach_workspace:
          at: ~/project
      # This step is added to show that files are available from the build job.
      - run:
          name: Content to deploy
          command: ls && cat build.txt
      - deploy:
          name: Deploy
          command: echo "Deploying << parameters.package_name >> ..."

workflows:
  version: 2

  # The main workflow responsible for triggering all other workflows
  # in which changes are detected.
  ci:
    when: << pipeline.parameters.trigger >>
    jobs:
      - trigger-workflows


  # Workflows defined for each package.

  api:
    when: << pipeline.parameters.api >>
    jobs:
      - build:
          name: api-build
          package_name: api
      - deploy:
          name: api-deploy
          package_name: api
          requires:
            - api-build

  app:
    when: << pipeline.parameters.app >>
    jobs:
      - build:
          name: app-build
          package_name: app
      - deploy:
          name: app-deploy
          package_name: app
          requires:
            - app-build

  auth:
    when: << pipeline.parameters.auth >>
    jobs:
      - build:
          name: auth-build
          package_name: auth
      - deploy:
          name: auth-deploy
          package_name: auth
          requires:
            - auth-build

  gateway:
    when: << pipeline.parameters.gateway >>
    jobs:
      - build:
          name: gateway-build
          package_name: gateway
      - deploy:
          name: gateway-deploy
          package_name: gateway
          requires:
            - gateway-build